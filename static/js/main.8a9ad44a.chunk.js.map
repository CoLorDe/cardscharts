{"version":3,"sources":["reportWebVitals.js","components/Home.js","components/CardFront.js","components/CardBack.js","components/Card.js","components/indicatorsData.js","components/Indicators.js","components/chartsData.js","components/Charts.js","components/Info.js","components/NotFoundPage.js","Header.js","Footer.js","components/ScrollArrow.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Home","className","CardFront","props","name","textfront","CardBack","textback","Card","state","isFlipped","handleClick","bind","e","preventDefault","this","setState","prevState","flipDirection","onClick","style","backgroundColor","color","React","Component","cardsData","bgcolor","Indicators","map","data","key","Charts","Info","NotFoundPage","class","Header","to","exact","path","Footer","href","target","height","viewBox","version","width","aria-hidden","fill-rule","d","ScrollArrow","useState","showScroll","setShowScroll","window","addEventListener","pageYOffset","scrollTo","top","behavior","display","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a9ad44a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import '../App.css';\n\n\nfunction Home() {\n  return (\n    <div className=\"main\"><h1>Hello from Home</h1></div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\r\n\r\nfunction CardFront(props) {\r\n  return (\r\n    <div>\r\n      <h4>{props.name}</h4>\r\n      <p>{props.textfront}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardFront;\r\n","import React from \"react\";\r\n\r\nfunction CardBack(props) {\r\n  return (\r\n    <div>\r\n      <h4>{props.name}</h4>\r\n      <p>{props.textback}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default CardBack;\r\n","import \"../App.css\"\r\n\r\nimport React from \"react\";\r\nimport ReactCardFlip from 'react-card-flip';\r\nimport CardFront from \"./CardFront\"\r\nimport CardBack from \"./CardBack\"\r\n\r\nclass Card extends React.Component {\r\n  constructor() {\r\n    super();\r\n      this.state = {\r\n      isFlipped: false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"horizontal\">\r\n        <div className=\"card-side card-front\"\r\n          onClick={this.handleClick}\r\n          style={{backgroundColor: \"#\"+this.props.color}}>\r\n          <CardFront name={this.props.name} textfront={this.props.textfront} />\r\n          <p className=\"hint\">Click or Tap to flip</p>\r\n        </div>\r\n\r\n        <div className=\"card-side card-back\"\r\n          onClick={this.handleClick}\r\n          style={{backgroundColor: \"#\"+((this.props.color)+222222)}}>\r\n          <CardBack name={this.props.name} textback={this.props.textback} />\r\n          <p className=\"hint\">Click or Tap to flip</p>\r\n        </div>\r\n      </ReactCardFlip>\r\n      )\r\n    };\r\n};\r\n\r\nexport default Card;\r\n","const cardsData = [\r\n      {\r\n      name: \"MA\",\r\n      textfront: \"Moving Average\",\r\n      textback: \"Smooths out price data by creating a constantly updated average price\",\r\n      bgcolor: 224477,\r\n      },\r\n      {\r\n      name: \"EMA\",\r\n      textfront: \"Exponential Moving Average\",\r\n      textback: \"Smooths out price data by creating a constantly updated average price\",\r\n      bgcolor: 334477,\r\n      },\r\n      {\r\n        name: \"MACD\",\r\n        textfront: \"Moving Average Divergence Convergence\",\r\n        textback: \"Smooths out price data by creating a constantly updated average price\",\r\n        bgcolor: 226677,\r\n      },\r\n      {\r\n      name: \"BOLL\",\r\n      textfront: \"Bollinger Bands\",\r\n      textback: \"Smooths out price data by creating a constantly updated average price\",\r\n      bgcolor: 224477,\r\n      },\r\n      {\r\n        name: \"RSI\",\r\n        textfront: \"Relative Strength Index\",\r\n        textback: \"Smooths out price data by creating a constantly updated average price\",\r\n        bgcolor: 443377,\r\n      },\r\n      {\r\n      name: \"KDJ\",\r\n      textfront: \"Random Index\",\r\n      textback: \"Smooths out price data by creating a constantly updated average price\",\r\n      bgcolor: 223355,\r\n      },\r\n      {\r\n        name: \"OBV\",\r\n        textfront: \"On-Balance Volume \",\r\n        textback: \"Smooths out price data by creating a constantly updated average price\",\r\n        bgcolor: 555577,\r\n      },\r\n      {\r\n      name: \"VOL\",\r\n      textfront: \"Volume\",\r\n      textback: \"Smooths out price data by creating a constantly updated average price\",\r\n      bgcolor: 335566,\r\n      },\r\n\r\n  ]\r\n\r\n\r\nexport default cardsData;\r\n","import '../App.css';\nimport React from 'react'\n\nimport Card from './Card';\nimport cardsData from './indicatorsData';\n\nfunction Indicators(props) {\n  return (\n    <>\n    <div className=\"main\">\n      <h2>Indicators</h2>\n      <div className=\"description\">\n        <p>A technical indicator is a mathematical calculation based on the\n        history and volumes exchanged of a certain asset. They are a fundamental\n         part of technical analysis and are typically used to predict market\n         trend. Generally they indicate wheter the price is in an \"overbought\"\n         or \"oversold\" condition.</p>\n      </div>\n      <div className=\"cards-container\">\n        {cardsData.map((data, key) => {\n          return (\n            <div className=\"card\" key={key} >\n              <Card name={data.name}\n                textfront={data.textfront}\n                textback={data.textback} color={data.bgcolor} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default Indicators;\n","const cardsData = [\r\n      {\r\n      name: \"Line Charts\",\r\n      textfront: \"Very simple type of chart, may be too simple for day traders. Often used in presentations and reports. Commonly used also to draw trend lines to anticipate potential price inflections.\",\r\n      textback: \"Composed of a single line, that connects the closing prices at each time intervals.\",\r\n      bgcolor: 234567,\r\n      },\r\n      {\r\n      name: \"Candlestick Charts\",\r\n      textfront: \"This chart utilizes the opening, closing, high and low price data. Candlestick charts give a lot of information, and it's the most common type of chart used by day traders. This large amount of information is sometimes perceived as too 'noisy'.\",\r\n      textback: \"The candlestick is composed of 3 parts, the body, the upper tail and the lower tail. The body goes from the opening to the closing price. The upper and lower tails are thin lines that extend from the highest to the lowest prices reached. A green candle indicates a higher closing price than the opening one, a red one indicates a lower one.\",\r\n      bgcolor: 543267,\r\n      },\r\n      {\r\n      name: \"Bar Charts\",\r\n      textfront: \"Also known as Open-High-Low-Close (OLHC), many traders find OHLC charts easier to follow than candlestick ones. The absence of color filters out information that is perceived as emotion from some traders.\",\r\n      textback: \"The bars in an OLHC chart are composed of 3 parts, a vertical line, that extends from the lowest to the highest prices, and 2 horizontal lines, indicating the opening price (on the left) and the closing price (on the right) for each time interval.\",\r\n      bgcolor: 324567,\r\n      },\r\n      {\r\n      name: \"Point and Figures Charts\",\r\n      textfront: \"Originally developed as a price recording system, it has become a charting method. This charting method focuses only on significant price moves, filtering out the 'noise'.\",\r\n      textback: \"This type of chart is discretized, and consists of Xs and Os to represent price changes. X columns represent rising prices, and O columns represent falling prices. The substantial different of Point and Figure charts is that the time is not used on linear basis, instead, depending on the method, a new column is started everytime the price reaches certain levels.\",\r\n      bgcolor: 444466,\r\n      },\r\n      {\r\n      name: \"Other types of charts\",\r\n      textfront: \"There are other types of charts used, but the majority of them has little differences compared to the aforementioned ones and give no extra information to traders.\",\r\n      textback: \"Volume type charts are missing from these cards.\",\r\n      bgcolor: 222222,\r\n      }\r\n  ]\r\n\r\n\r\nexport default cardsData;\r\n","import '../App.css';\nimport React from \"react\"\n\nimport Card from './Card';\nimport cardsData from './chartsData';\n\nfunction Charts() {\n  return (\n    <>\n    <div className=\"main\">\n      <h2>Charts</h2>\n      <div className=\"description\">\n        <p>Charts are the main tools used for technical analysis. Charts plot the price history of a certain asset. The visual represantation allows to recognize rare or common price patterns, trends, support and resistance.</p>\n      </div>\n      <div className=\"cards-container\">\n        {cardsData.map((data, key) => {\n          return (\n            <div className=\"card\" key={key} >\n              <Card name={data.name}\n                textfront={data.textfront}\n                textback={data.textback} color={data.bgcolor} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n    </>\n  );\n};\n\n\nexport default Charts;\n","import '../App.css';\n\nfunction Info() {\n  return (\n    <div>\n      <h2>Info</h2>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Info;\n","import '../App.css';\r\n\r\n\r\nfunction NotFoundPage() {\r\n  return (\r\n    <div class=\"main\"><p className=\"error-title\">404</p></div>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import React from \"react\";\r\nimport { Redirect, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Indicators from \"./components/Indicators\";\r\nimport Charts from \"./components/Charts\";\r\nimport Info from \"./components/Info\";\r\nimport NotFoundPage from \"./components/NotFoundPage\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <Router>\r\n      <div className=\"header\">\r\n        <div className=\"sitename\">\r\n          <h1>Learnifi</h1>\r\n        </div>\r\n        <div className=\"topnav\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/\">Home</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/charts\">Charts</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/indicators\">Indicators</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/info\">Info</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/indicators\">\r\n            <Indicators />\r\n          </Route>\r\n          <Route exact path=\"/charts\">\r\n            <Charts />\r\n          </Route>\r\n          <Route exact path=\"/info\">\r\n            <Info />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/404\">\r\n            <NotFoundPage />\r\n          </Route>\r\n          <Redirect to=\"404\" />\r\n        </Switch>\r\n\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\n\r\nfunction Footer() {\r\n  return(\r\n    <Router>\r\n      <div className=\"footer\">\r\n        <div className=\"sitename\">\r\n          <h1>Learnifi</h1>\r\n        </div>\r\n        <div>\r\n          <p>Find me on <a className=\"find\" href=\"https://github.com/colorde/filearn\" target=\"_blank\">Github\r\n          <svg className=\"icon\" height=\"24\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"32\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z\"></path></svg></a></p>\r\n        </div>\r\n        <div className=\"botnav\">\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/charts\">Charts</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/indicators\">Indicators</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/info\">Info</Link>\r\n            </li>\r\n          </ul>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/about\">About</Link>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/colorde/filearn\">Contribute</a>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/terms of use\">Terms of Use</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  )\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from 'react';\r\nimport { FaArrowCircleUp } from 'react-icons/fa';\r\nimport '../App.css';\r\n\r\nfunction ScrollArrow() {\r\n  const [showScroll, setShowScroll] = useState(false)\r\n\r\n  const checkScrollTop = () => {\r\n     if (!showScroll && window.pageYOffset > 400){\r\n        setShowScroll(true)\r\n     } else if (showScroll && window.pageYOffset <= 400){\r\n        setShowScroll(false)\r\n     }\r\n  };\r\n\r\n  const scrollTop = () => {\r\n    window.scrollTo({top: 0, behavior: 'smooth'});\r\n  };\r\n\r\n  window.addEventListener('scroll', checkScrollTop)\r\n\r\n  return(\r\n    <FaArrowCircleUp\r\n      className=\"scrollTop\"\r\n      onClick={scrollTop}\r\n      style={{ display: showScroll ? 'flex' : 'none'}}/>\r\n  );\r\n}\r\n\r\nexport default ScrollArrow;\r\n","import React from \"react\";\r\n\r\nimport Header from \"./Header\"\r\nimport Footer from \"./Footer\"\r\nimport ScrollArrow from \"./components/ScrollArrow\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <ScrollArrow />\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}