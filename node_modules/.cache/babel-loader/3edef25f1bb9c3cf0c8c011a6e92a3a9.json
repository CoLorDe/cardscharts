{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\loren\\\\learnfinanceapp\\\\learnifi\\\\src\\\\components\\\\Charts.js\";\nimport '../App.css';\nimport React, { useEffect, useState } from \"react\";\nimport Card from './Card';\nimport cardsData from './cardsData';\n\nfunction Charts() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Indicators\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A technical indicator is a mathematical calculation based on the history and volumes exchanged of a certain asset. They are a fundamental part of technical analysis and are typically used to predict market trend. Generally they indicate wheter the price is in an \\\"overbought\\\" or \\\"oversold\\\" condition.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container\",\n        children: cardsData.map((data, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              name: data.name,\n              textfront: data.textfront,\n              textback: data.textback,\n              color: data.bgcolor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, this)\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c = Charts;\n;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["C:/Users/loren/learnfinanceapp/learnifi/src/components/Charts.js"],"names":["React","useEffect","useState","Card","cardsData","Charts","map","data","key","name","textfront","textback","bgcolor"],"mappings":";;;AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,MAAT,GAAkB;AAChB,sBACE;AAAA,2BACA;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBACGD,SAAS,CAACE,GAAV,CAAc,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC5B,8BACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,EAAED,IAAI,CAACE,IAAjB;AACE,cAAA,SAAS,EAAEF,IAAI,CAACG,SADlB;AAEE,cAAA,QAAQ,EAAEH,IAAI,CAACI,QAFjB;AAE2B,cAAA,KAAK,EAAEJ,IAAI,CAACK;AAFvC;AAAA;AAAA;AAAA;AAAA;AADF,aAA2BJ,GAA3B;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SARA;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAyBD;;KA1BQH,M;AA0BR;AAGD,eAAeA,MAAf","sourcesContent":["import '../App.css';\nimport React, { useEffect, useState} from \"react\"\nimport Card from './Card';\nimport cardsData from './cardsData';\n\nfunction Charts() {\n  return (\n    <>\n    <div>\n      <h2>Indicators</h2>\n      <div className=\"description\">\n        <p>A technical indicator is a mathematical calculation based on the\n        history and volumes exchanged of a certain asset. They are a fundamental\n         part of technical analysis and are typically used to predict market\n         trend. Generally they indicate wheter the price is in an \"overbought\"\n         or \"oversold\" condition.</p>\n      </div>\n      <div className=\"cards-container\">\n        {cardsData.map((data, key) => {\n          return (\n            <div className=\"card\" key={key} >\n              <Card name={data.name}\n                textfront={data.textfront}\n                textback={data.textback} color={data.bgcolor} />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n    </>\n  );\n};\n\n\nexport default Charts;\n"]},"metadata":{},"sourceType":"module"}